#!venv/bin/python

"""
	API Proper
	This top level program handles requests and authetication
	Many database-oriented tasks are offloaded to the db_overlay module
"""

from flask import Flask
from flask import request
import datetime
import random
import sys
import users_db_overlay as udb
import posts_db_overlay as pdb

app = Flask(__name__)



@app.route('/', methods=['GET'])
def index():
	return """
	Hey howdy hey!
	Congratulations, your connection to the server worked!
	(Now go read the API docs to figure out how to do useful things with the API.)
	"""


@app.route('/howdy', methods=['GET'])
@app.route('/yeehaw', methods=['GET'])
def yeehaw():
	return "Yeehaw!"



@app.route('/hello/<username>', methods=['GET'])
def sayHi(username):
	return "Hello " + username



@app.route('/echo', methods=['POST'])
def echo():
	"""
	Echo all data thrown at us back at the CURLer
	"""
	return request.data



@app.route('/signup', methods=['POST'])
def mkuser():
	"""
	Add a new user to the users database
	Inputs:
		JSONified form of a user, takes the form:
			{
				"user": {
					"username": $username
					"realname": $realname
					"password": $password
				}
			}
	"""

	try:
		# generate our 32-character long UUUID
		recruit_UUUID=str(abs(int(
			str(hash(datetime.datetime.now))+
			str(random.randint(111111111111,999999999999))
		)))
	except:
		return "Fucked up the UUUID gen!"

	try:
		# pull other information out of the JSON we got
		recruit_username=request.get_json()["username"]
		recruit_realname=request.get_json()["realname"]
		recruit_password=request.get_json()["password"]

		# add the user
		udb.add_user(recruit_UUUID, recruit_username, recruit_realname, recruit_password)
	except BaseException as e:
		print(e)
		print("Failed adding or getting the user")
		return 400

	try:
		return str(udb.get_user(recruit_UUUID))
	except:
		return "Fuck!"



if __name__ == '__main__':
	if "home" in sys.argv:
		"""
		Two scenarios:
			- we're running on prod, in which case assigning an IP and port and stuff works fine
			- we're running on dev (read: our own personal computers), in which case we want to use localhost:5000 anyways
		The script defaults to running as if on prod, but supplying "home" as an argument will run the API on localhost:5000
		"""

		# run apy.py on localhost:5000
		app.run(
			debug=True,
			host='127.0.0.1'
		)
	else:
		# (try) to run according to the config file
		try:
			# try to load the config file, located in /config.py
			import config
			app.run(
				debug=config.is_debug,
				host=config.system_ip,
				port=config.port
			)
		except BaseException as e:
			try:
				print(e)
				print("Configuration file failed!, falling back to some sane defaults.")
				app.run(
					debug=True,
					host='127.0.0.1'
				)
			except:
				
				print("Sane defaults failed, you're on your own!")
				print("(Good luck!)")
